# Triangular, pentagonal, and hexagonal
#
# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
#
# Triangle	 	T(n) = n(n+1)/2	 	1, 3, 6, 10, 15, ...
# Pentagonal	P(n) = n(3n-1)/2	 	1, 5, 12, 22, 35, ...
# Hexagonal	 	H(n) = n(2n-1)	 	1, 6, 15, 28, 45, ...
# It can be verified that T(285) = P(165) = H(143) = 40755.
#
# Find the next triangle number that is also pentagonal and hexagonal.

"""
Solution Approach:
==================
* The formula to detect whether a number 'n' is pentagonal or not is (square root(24n + 1) + 1) / 6 = Natural Number
* The formula to detect whether a number 'n' is hexagonal or not is (square root(8n + 1) + 1) / 4 = Natural Number
* Now iterate infinitely from numbers greater than 285 to find the next triangular number which is also a pentagonal
and hexagonal
* Source : Wikipedia on Hexagonal and Pentagonal numbers
"""

from euler.problem_0044 import is_pentagonal


def is_hexagonal(num):
    return (((((8 * num) + 1) ** 0.5) + 1) / 4).is_integer()


def get_next_tri_penta_hexa_number(num):
    num_val = num
    while True:
        num_val += 1
        t = num_val * (num_val + 1) // 2
        if is_pentagonal(t) and is_hexagonal(t):
            return t


print(get_next_tri_penta_hexa_number(285))